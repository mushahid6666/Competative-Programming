//
// Created by Mushahid Alam on 9/14/15.
//

#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node* left;
    struct node* right;
};

Node* newnode(int data)
{
    Node* newn = (Node*)malloc(sizeof(Node));
    newn->data = data;
    newn->left = NULL;
    newn->right = NULL;
}
typedef struct node Node;

int findLCA(Node *root, int n1, int n2)
{
    if(root == NULL) return NULL;

    if(root->data == n1 || root->data == n2)
        return root;

    Node *leftLCA = findLCA(root->left, n1, n2);
    Node *rightLCA = findLCA(root->right, n1, n2);

    if(leftLCA && rightLCA)
        return root;

    return (leftLCA != NULL)?leftLCA:rightLCA;
}

int main()
{
    Node * root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
    root->left->left = newNode(4);
    root->left->right = newNode(5);
    root->right->left = newNode(6);
    root->right->right = newNode(7);


}